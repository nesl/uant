# Makefile.in generated by automake 1.10.1 from Makefile.am.
# usrp/host/lib/legacy/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  USRP - Universal Software Radio Peripheral
# 
#  Copyright (C) 2003,2004,2006,2007,2008,2009 Free Software Foundation, Inc.
# 
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
# 
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
# 
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Boston, MA  02110-1301  USA
# 

# -*- Makefile -*-
#
# Copyright 2004,2006,2007,2008,2009 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

# -*- Makefile -*-
#
# Copyright 2009 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 



pkgdatadir = $(datadir)/gnuradio
pkglibdir = $(libdir)/gnuradio
pkgincludedir = $(includedir)/gnuradio
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
DIST_COMMON = $(include_HEADERS) $(noinst_HEADERS) $(noinst_PYTHON) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/std_paths.h.in $(swiginclude_HEADERS) \
	$(top_srcdir)/Makefile.common $(top_srcdir)/Makefile.par.gen \
	$(usrppython_PYTHON)
subdir = usrp/host/lib/legacy
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/acx_cblas.m4 \
	$(top_srcdir)/config/acx_pthread.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/cppunit.m4 \
	$(top_srcdir)/config/gr_check_createfilemapping.m4 \
	$(top_srcdir)/config/gr_check_memalign.m4 \
	$(top_srcdir)/config/gr_check_shm_open.m4 \
	$(top_srcdir)/config/gr_doxygen.m4 \
	$(top_srcdir)/config/gr_fortran.m4 \
	$(top_srcdir)/config/gr_gprof.m4 \
	$(top_srcdir)/config/gr_lib64.m4 \
	$(top_srcdir)/config/gr_libgnuradio_core_extra_ldflags.m4 \
	$(top_srcdir)/config/gr_no_undefined.m4 \
	$(top_srcdir)/config/gr_omnithread.m4 \
	$(top_srcdir)/config/gr_pwin32.m4 \
	$(top_srcdir)/config/gr_python.m4 \
	$(top_srcdir)/config/gr_qwt.m4 \
	$(top_srcdir)/config/gr_qwtplot3d.m4 \
	$(top_srcdir)/config/gr_scripting.m4 \
	$(top_srcdir)/config/gr_set_md_cpu.m4 \
	$(top_srcdir)/config/gr_subversion.m4 \
	$(top_srcdir)/config/gr_swig.m4 \
	$(top_srcdir)/config/gr_sysv_shm.m4 \
	$(top_srcdir)/config/grc_build.m4 \
	$(top_srcdir)/config/grc_gcell.m4 \
	$(top_srcdir)/config/grc_gnuradio_core.m4 \
	$(top_srcdir)/config/grc_gnuradio_examples.m4 \
	$(top_srcdir)/config/grc_gr_atsc.m4 \
	$(top_srcdir)/config/grc_gr_audio_alsa.m4 \
	$(top_srcdir)/config/grc_gr_audio_jack.m4 \
	$(top_srcdir)/config/grc_gr_audio_oss.m4 \
	$(top_srcdir)/config/grc_gr_audio_osx.m4 \
	$(top_srcdir)/config/grc_gr_audio_portaudio.m4 \
	$(top_srcdir)/config/grc_gr_audio_windows.m4 \
	$(top_srcdir)/config/grc_gr_comedi.m4 \
	$(top_srcdir)/config/grc_gr_cvsd_vocoder.m4 \
	$(top_srcdir)/config/grc_gr_gcell.m4 \
	$(top_srcdir)/config/grc_gr_gpio.m4 \
	$(top_srcdir)/config/grc_gr_gsm_fr_vocoder.m4 \
	$(top_srcdir)/config/grc_gr_msdd6000.m4 \
	$(top_srcdir)/config/grc_gr_pager.m4 \
	$(top_srcdir)/config/grc_gr_qtgui.m4 \
	$(top_srcdir)/config/grc_gr_radar_mono.m4 \
	$(top_srcdir)/config/grc_gr_radio_astronomy.m4 \
	$(top_srcdir)/config/grc_gr_sounder.m4 \
	$(top_srcdir)/config/grc_gr_trellis.m4 \
	$(top_srcdir)/config/grc_gr_usrp.m4 \
	$(top_srcdir)/config/grc_gr_usrp2.m4 \
	$(top_srcdir)/config/grc_gr_utils.m4 \
	$(top_srcdir)/config/grc_gr_video_sdl.m4 \
	$(top_srcdir)/config/grc_gr_wxgui.m4 \
	$(top_srcdir)/config/grc_grc.m4 \
	$(top_srcdir)/config/grc_gruel.m4 \
	$(top_srcdir)/config/grc_mblock.m4 \
	$(top_srcdir)/config/grc_omnithread.m4 \
	$(top_srcdir)/config/grc_pmt.m4 \
	$(top_srcdir)/config/grc_usrp.m4 \
	$(top_srcdir)/config/grc_usrp2.m4 \
	$(top_srcdir)/config/lf_cc.m4 $(top_srcdir)/config/lf_cxx.m4 \
	$(top_srcdir)/config/lf_warnings.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/macosx_audiounit.m4 \
	$(top_srcdir)/config/mkstemp.m4 \
	$(top_srcdir)/config/onceonly.m4 $(top_srcdir)/config/pkg.m4 \
	$(top_srcdir)/config/sdl.m4 \
	$(top_srcdir)/config/usrp_fusb_tech.m4 \
	$(top_srcdir)/config/usrp_libusb.m4 \
	$(top_srcdir)/config/usrp_sdcc.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = std_paths.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(usrppythondir)" \
	"$(DESTDIR)$(includedir)" "$(DESTDIR)$(swigincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) ../../misc/libmisc.la
libusrp_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
#libusrp_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_1)
am__libusrp_la_SOURCES_DIST = fusb.cc md5.c usrp_basic.cc \
	usrp_config.cc usrp_dbid.cc usrp_local_sighandler.cc \
	usrp_prims.cc usrp_standard.cc db_boards.cc db_base.cc \
	db_basic.cc db_tv_rx.cc db_flexrf.cc db_flexrf_mimo.cc \
	db_dbs_rx.cc db_xcvr2450.cc db_dtt754.cc db_dtt768.cc \
	db_util.cc fusb_darwin.cc fusb_sysconfig_darwin.cc README_OSX \
	circular_buffer.h circular_linked_list.h darwin_libusb.h \
	mld_threads.h fusb_generic.cc fusb_sysconfig_generic.cc \
	fusb_linux.cc fusb_sysconfig_linux.cc fusb_ra_wb.cc \
	fusb_sysconfig_ra_wb.cc fusb_win32.cc fusb_sysconfig_win32.cc
am__objects_1 = fusb.lo md5.lo usrp_basic.lo usrp_config.lo \
	usrp_dbid.lo usrp_local_sighandler.lo usrp_prims.lo \
	usrp_standard.lo db_boards.lo db_base.lo db_basic.lo \
	db_tv_rx.lo db_flexrf.lo db_flexrf_mimo.lo db_dbs_rx.lo \
	db_xcvr2450.lo db_dtt754.lo db_dtt768.lo db_util.lo
am__objects_2 = fusb_darwin.lo fusb_sysconfig_darwin.lo
am__objects_3 = fusb_generic.lo fusb_sysconfig_generic.lo
am__objects_4 = fusb_linux.lo fusb_sysconfig_linux.lo
am__objects_5 = fusb_ra_wb.lo fusb_sysconfig_ra_wb.lo
am__objects_6 = fusb_win32.lo fusb_sysconfig_win32.lo
##am_libusrp_la_OBJECTS = $(am__objects_1) \
##	$(am__objects_6)
##am_libusrp_la_OBJECTS = $(am__objects_1) \
##	$(am__objects_5)
am_libusrp_la_OBJECTS = $(am__objects_1) \
	$(am__objects_4)
#am_libusrp_la_OBJECTS = $(am__objects_1) \
#	$(am__objects_3)
#am_libusrp_la_OBJECTS = $(am__objects_1) \
#	$(am__objects_2)
libusrp_la_OBJECTS = $(am_libusrp_la_OBJECTS)
libusrp_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libusrp_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libusrp_la_SOURCES) $(EXTRA_libusrp_la_SOURCES)
DIST_SOURCES = $(am__libusrp_la_SOURCES_DIST) \
	$(EXTRA_libusrp_la_SOURCES)
usrppythonPYTHON_INSTALL = $(INSTALL_DATA)
py_compile = $(top_srcdir)/py-compile
includeHEADERS_INSTALL = $(INSTALL_HEADER)
swigincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(noinst_HEADERS) $(swiginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /usr/local/src/gnuradio/missing --run aclocal-1.10
ALLOCA = 
ALSA_CFLAGS = -I/usr/include/alsa  
ALSA_CPPFLAGS =  -I/usr/include/alsa
ALSA_INCLUDEDIR = /usr/include
ALSA_LIBS = -lasound -lm -ldl -lpthread -lrt  
AMTAR = ${SHELL} /usr/local/src/gnuradio/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /usr/local/src/gnuradio/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/local/src/gnuradio/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/local/src/gnuradio/missing --run automake-1.10
AWK = mawk
BOOST_CPPFLAGS = -I/opt/boost//include/boost-1_39
BOOST_CXXFLAGS = -pthread
BOOST_DATE_TIME_LIB = -lboost_date_time-gcc43-mt-1_39
BOOST_LDFLAGS = -L/opt/boost//lib
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-gcc43-mt-1_39
BOOST_THREAD_LIB = -lboost_thread-gcc43-mt-1_39  -lrt 
CBLAS_LIBS = -lgslcblas
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -pthread -pthread -Wall -Werror-implicit-function-declaration
COMEDI_CFLAGS = 
COMEDI_CPPFLAGS = 
COMEDI_INCLUDEDIR = 
COMEDI_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS =  
CPPUNIT_CONFIG = 
CPPUNIT_CPPFLAGS = 
CPPUNIT_INCLUDEDIR = /usr/include
CPPUNIT_INCLUDES =  
CPPUNIT_LIBS = -lcppunit -ldl  
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -pthread -pthread -Wall -Woverloaded-virtual
CXX_FOR_BUILD = g++
CYGPATH_W = echo
DEFINES =  -DOMNITHREAD_POSIX=1
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOT = 
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
FFTW3F_CFLAGS =  
FFTW3F_CPPFLAGS = 
FFTW3F_INCLUDEDIR = /usr/include
FFTW3F_LIBS = -lfftw3f -lm  
FGREP = /bin/grep -F
FLIBS = 
FUSB_TECH = linux
GREP = /bin/grep
GR_ARCH_BIGENDIAN = 0
GR_HAVE_ARPA_INET = 1
GR_HAVE_BYTESWAP = 1
GR_HAVE_NETINET_IN = 1
GSL_CFLAGS = -I/usr/local/include  
GSL_CPPFLAGS =  -I/usr/local/include
GSL_INCLUDEDIR = /usr/local/include
GSL_LIBS = -L/usr/local/lib -lgsl -lgslcblas -lm  
GUILE = /usr/bin/guile
HAVE_DOT = YES
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPC_LIBS = 
JACK_CFLAGS =  
JACK_CPPFLAGS = 
JACK_INCLUDEDIR = /usr/include
JACK_LIBS = -ljack -lpthread -lrt  
LD = /usr/bin/ld
LDFLAGS = 
LIBGNURADIO_CORE_EXTRA_LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /usr/local/src/gnuradio/missing --run makeinfo
MD_CPU = x86
MD_SUBCPU = x86
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NO_UNDEFINED = 
OBJDUMP = objdump
OBJEXT = o
OSS_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = gnuradio
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PORTAUDIO_CFLAGS = -pthread  
PORTAUDIO_CPPFLAGS = 
PORTAUDIO_INCLUDEDIR = /usr/include
PORTAUDIO_LIBS = -lportaudio -lm -lpthread  
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS =  -lrt 
PYTHON = /usr/bin/python
PYTHONW = python
PYTHON_CPPFLAGS = -I/usr/include/python2.5
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_LDFLAGS = 
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.5
QMAKE_INCLUDES = 
QTCORE_CFLAGS = 
QTCORE_CPPFLAGS = 
QTCORE_INCLUDEDIR = 
QTCORE_LIBS = 
QTGUI_CFLAGS = 
QTGUI_CPPFLAGS = 
QTGUI_INCLUDEDIR = 
QTGUI_LIBS = 
QTOPENGL_CFLAGS = 
QTOPENGL_CPPFLAGS = 
QTOPENGL_INCLUDEDIR = 
QTOPENGL_LIBS = 
QT_INCLUDES =    
QT_LIBS =   
QT_MOC_EXEC = 
QT_UIC_EXEC = 
QWTPLOT3D_CFLAGS = 
QWTPLOT3D_LIBS = 
QWT_CFLAGS = 
QWT_LIBS = 
RANLIB = ranlib
RM_PROG = /bin/rm
SDL_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
SDL_CONFIG = 
SDL_CPPFLAGS =  -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL
SDL_INCLUDEDIR = /usr/include
SDL_LIBS = -lSDL  
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHM_OPEN_LIBS = -lrt 
SPU_GCC_PROG = no
STRIP = strip
SVN = 
SVNDATE = 
SVNVERSION = 
SWIG = /usr/bin/swig -c++
SWIG_PYTHON_CPPFLAGS = -I/usr/include/python2.5
SWIG_PYTHON_LIB = -lswigpy
SWIG_PYTHON_OPT = -python
USB_CFLAGS =  
USB_CPPFLAGS = 
USB_INCLUDEDIR = /usr/include
USB_LIBS = -lusb  
USRP2_INCLUDES = -I${abs_top_srcdir}/usrp2/host/include 		-I${abs_top_srcdir}/usrp2/firmware/include
USRP2_LA = ${abs_top_builddir}/usrp2/host/lib/libusrp2.la
VERSION = 3.2svn
WINAUDIO_LIBS = 
XAS = asx8051 -plosgff
XCC = sdcc -mmcs51 --no-xinit-opt
XDG_UTILS = true
XMLTO = yes
abs_builddir = /usr/local/src/gnuradio/usrp/host/lib/legacy
abs_srcdir = /usr/local/src/gnuradio/usrp/host/lib/legacy
abs_top_builddir = /usr/local/src/gnuradio
abs_top_srcdir = /usr/local/src/gnuradio
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_F77 = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
autoconf_default_CXXFLAGS = -g -O2
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_dirs = config gruel omnithread gnuradio-core pmt mblock usrp usrp2 gr-usrp gr-usrp2 gr-msdd6000 gr-audio-alsa gr-audio-jack gr-audio-oss gr-audio-portaudio gr-atsc gr-cvsd-vocoder gr-gpio gr-gsm-fr-vocoder gr-pager gr-radar-mono gr-radio-astronomy gr-trellis gr-video-sdl gr-wxgui gr-sounder gr-utils gnuradio-examples
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
enable_dot = no
enable_html_docs = YES
enable_latex_docs = NO
enable_xml_docs = YES
exec_prefix = ${prefix}
gcell_INCLUDEDIR = 
gcell_INCLUDES = -I${abs_top_srcdir}/gcell/include
gcell_LA = ${abs_top_builddir}/gcell/lib/libgcell.la
gcell_LDFLAG = 
gcell_LIBDIRPATH = 
gcell_spu_INCLUDES = -I${abs_top_srcdir}/gcell/include
gcell_spu_LA = ${abs_top_builddir}/gcell/lib/spu/libgcell_spu.a
generate_docs = 
gnuradio_core_I = 
gnuradio_core_INCLUDEDIR = 
gnuradio_core_INCLUDES = -I${abs_top_srcdir}/gnuradio-core/src/lib/runtime -I${abs_top_srcdir}/gnuradio-core/src/lib/general -I${abs_top_builddir}/gnuradio-core/src/lib/general -I${abs_top_srcdir}/gnuradio-core/src/lib/gengen -I${abs_top_builddir}/gnuradio-core/src/lib/gengen -I${abs_top_srcdir}/gnuradio-core/src/lib/filter -I${abs_top_builddir}/gnuradio-core/src/lib/filter -I${abs_top_srcdir}/gnuradio-core/src/lib/missing -I${abs_top_srcdir}/gnuradio-core/src/lib/reed-solomon -I${abs_top_srcdir}/gnuradio-core/src/lib/viterbi -I${abs_top_srcdir}/gnuradio-core/src/lib/io -I${abs_top_srcdir}/gnuradio-core/src/lib/g72x -I${abs_top_srcdir}/gnuradio-core/src/lib/swig -I${abs_top_builddir}/gnuradio-core/src/lib/swig $(FFTW3F_CFLAGS) $(GSL_CFLAGS)
gnuradio_core_LA = ${abs_top_builddir}/gnuradio-core/src/lib/libgnuradio-core.la
gnuradio_core_LDFLAG = 
gnuradio_core_LIBDIRPATH = ${abs_top_builddir}/gnuradio-core/src/lib:${abs_top_builddir}/gnuradio-core/src/lib/.libs
gnuradio_core_PYDIRPATH = ${abs_top_srcdir}/gnuradio-core/src/python
gnuradio_core_SWIGDIRPATH = ${abs_top_builddir}/gnuradio-core/src/lib/swig:${abs_top_builddir}/gnuradio-core/src/lib/swig/.libs:${abs_top_srcdir}/gnuradio-core/src/lib/swig
gnuradio_examples_INCLUDEDIR = 
gnuradio_examples_INCLUDES = 
gnuradio_examples_LA = 
gnuradio_examples_LDFLAG = 
gnuradio_examples_LIBDIRPATH = 
gr_atsc_INCLUDEDIR = 
gr_atsc_INCLUDES = 
gr_atsc_LA = 
gr_atsc_LDFLAG = 
gr_atsc_LIBDIRPATH = 
gr_audio_alsa_INCLUDEDIR = 
gr_audio_alsa_INCLUDES = 
gr_audio_alsa_LA = 
gr_audio_alsa_LDFLAG = 
gr_audio_alsa_LIBDIRPATH = 
gr_audio_jack_INCLUDEDIR = 
gr_audio_jack_INCLUDES = 
gr_audio_jack_LA = 
gr_audio_jack_LDFLAG = 
gr_audio_jack_LIBDIRPATH = 
gr_audio_oss_INCLUDEDIR = 
gr_audio_oss_INCLUDES = 
gr_audio_oss_LA = 
gr_audio_oss_LDFLAG = 
gr_audio_oss_LIBDIRPATH = 
gr_audio_osx_INCLUDEDIR = 
gr_audio_osx_INCLUDES = 
gr_audio_osx_LA = 
gr_audio_osx_LDFLAG = 
gr_audio_osx_LIBDIRPATH = 
gr_audio_portaudio_INCLUDEDIR = 
gr_audio_portaudio_INCLUDES = 
gr_audio_portaudio_LA = 
gr_audio_portaudio_LDFLAG = 
gr_audio_portaudio_LIBDIRPATH = 
gr_audio_windows_INCLUDEDIR = 
gr_audio_windows_INCLUDES = 
gr_audio_windows_LA = 
gr_audio_windows_LDFLAG = 
gr_audio_windows_LIBDIRPATH = 
gr_comedi_INCLUDEDIR = 
gr_comedi_INCLUDES = 
gr_comedi_LA = 
gr_comedi_LDFLAG = 
gr_comedi_LIBDIRPATH = 
gr_cvsd_vocoder_INCLUDEDIR = 
gr_cvsd_vocoder_INCLUDES = 
gr_cvsd_vocoder_LA = 
gr_cvsd_vocoder_LDFLAG = 
gr_cvsd_vocoder_LIBDIRPATH = 
gr_gcell_INCLUDEDIR = 
gr_gcell_INCLUDES = 
gr_gcell_LA = 
gr_gcell_LDFLAG = 
gr_gcell_LIBDIRPATH = 
gr_gpio_INCLUDEDIR = 
gr_gpio_INCLUDES = 
gr_gpio_LA = 
gr_gpio_LDFLAG = 
gr_gpio_LIBDIRPATH = 
gr_gsm_fr_vocoder_INCLUDEDIR = 
gr_gsm_fr_vocoder_INCLUDES = 
gr_gsm_fr_vocoder_LA = 
gr_gsm_fr_vocoder_LDFLAG = 
gr_gsm_fr_vocoder_LIBDIRPATH = 
gr_libdir_suffix = 
gr_msdd6000_INCLUDEDIR = 
gr_msdd6000_INCLUDES = 
gr_msdd6000_LA = 
gr_msdd6000_LDFLAG = 
gr_msdd6000_LIBDIRPATH = 
gr_pager_INCLUDEDIR = 
gr_pager_INCLUDES = 
gr_pager_LA = 
gr_pager_LDFLAG = 
gr_pager_LIBDIRPATH = 
gr_qtgui_INCLUDEDIR = 
gr_qtgui_INCLUDES = 
gr_qtgui_LA = 
gr_qtgui_LDFLAG = 
gr_qtgui_LIBDIRPATH = 
gr_radar_mono_INCLUDEDIR = 
gr_radar_mono_INCLUDES = 
gr_radar_mono_LA = 
gr_radar_mono_LDFLAG = 
gr_radar_mono_LIBDIRPATH = 
gr_radio_astronomy_INCLUDEDIR = 
gr_radio_astronomy_INCLUDES = 
gr_radio_astronomy_LA = 
gr_radio_astronomy_LDFLAG = 
gr_radio_astronomy_LIBDIRPATH = 
gr_sounder_INCLUDEDIR = 
gr_sounder_INCLUDES = 
gr_sounder_LA = 
gr_sounder_LDFLAG = 
gr_sounder_LIBDIRPATH = 
gr_trellis_INCLUDEDIR = 
gr_trellis_INCLUDES = 
gr_trellis_LA = 
gr_trellis_LDFLAG = 
gr_trellis_LIBDIRPATH = 
gr_usrp2_INCLUDEDIR = 
gr_usrp2_INCLUDES = 
gr_usrp2_LA = 
gr_usrp2_LDFLAG = 
gr_usrp2_LIBDIRPATH = 
gr_usrp_INCLUDEDIR = 
gr_usrp_INCLUDES = 
gr_usrp_LA = 
gr_usrp_LDFLAG = 
gr_usrp_LIBDIRPATH = 
gr_utils_INCLUDEDIR = 
gr_utils_INCLUDES = 
gr_utils_LA = 
gr_utils_LDFLAG = 
gr_utils_LIBDIRPATH = 
gr_video_sdl_INCLUDEDIR = 
gr_video_sdl_INCLUDES = 
gr_video_sdl_LA = 
gr_video_sdl_LDFLAG = 
gr_video_sdl_LIBDIRPATH = 
gr_wxgui_INCLUDEDIR = 
gr_wxgui_INCLUDES = 
gr_wxgui_LA = 
gr_wxgui_LDFLAG = 
gr_wxgui_LIBDIRPATH = 
grc_INCLUDEDIR = 
grc_INCLUDES = 
grc_LA = 
grc_LDFLAG = 
grc_LIBDIRPATH = 
gruel_INCLUDEDIR = 
gruel_INCLUDES = -I${abs_top_srcdir}/gruel/src/include -I${abs_top_builddir}/gruel/src/include
gruel_LA = ${abs_top_builddir}/gruel/src/lib/libgruel.la
gruel_LDFLAG = 
gruel_LIBDIRPATH = ${abs_top_builddir}/gruel/src/lib:${abs_top_builddir}/gruel/src/lib/.libs
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /usr/local/src/gnuradio/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mblock_INCLUDEDIR = 
mblock_INCLUDES = -I${abs_top_srcdir}/mblock/src/include
mblock_LA = ${abs_top_builddir}/mblock/src/lib/libmblock.la
mblock_LDFLAG = 
mblock_LIBDIRPATH = 
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
omnithread_INCLUDEDIR = 
omnithread_INCLUDES = -I${abs_top_srcdir}/omnithread
omnithread_LA = ${abs_top_builddir}/omnithread/libgromnithread.la
omnithread_LDFLAG = 
omnithread_LIBDIRPATH = ${abs_top_builddir}/omnithread:${abs_top_builddir}/omnithread/.libs
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gnuradio
pkgpythondir = ${pythondir}/gnuradio
pmt_INCLUDEDIR = 
pmt_INCLUDES = -I${abs_top_srcdir}/pmt/src/lib
pmt_LA = ${abs_top_builddir}/pmt/src/lib/libpmt.la
pmt_LDFLAG = 
pmt_LIBDIRPATH = 
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.5/site-packages
pythondir = ${prefix}/lib/python2.5/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
skipped_dirs =  gcell gr-gcell gr-audio-osx gr-audio-windows gr-comedi gr-qtgui grc
srcdir = .
subdirs =  usrp2/firmware
swig_CXXFLAGS = -g -O1 -Wno-strict-aliasing -Wno-parentheses
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_builddir = ../../../..
top_srcdir = ../../../..
usrp2_INCLUDEDIR = 
usrp2_INCLUDES = 
usrp2_LA = 
usrp2_LDFLAG = 
usrp2_LIBDIRPATH = 
usrp_INCLUDEDIR = 
usrp_INCLUDES = -I${abs_top_srcdir}/usrp/host/lib/legacy 		-I${abs_top_srcdir}/usrp/firmware/include 		-I${abs_top_builddir}/usrp/host/lib/legacy
usrp_LA = ${abs_top_builddir}/usrp/host/lib/legacy/libusrp.la
usrp_LDFLAG = 
usrp_LIBDIRPATH = 
usrp_darwin_omnithread_pc_requires = 
usrp_inband_INCLUDES = -I${abs_top_srcdir}/usrp/host/lib/inband
usrp_inband_LA = ${abs_top_builddir}/usrp/host/lib/inband/libusrp-inband.la
with_INCLUDES = 
with_LIBDIRPATH = 
with_PYDIRPATH = 
with_SWIGDIRPATH = 
with_SWIG_INCLUDES = 
with_dirs = 
AM_CXXFLAGS = -g -O2

# includes
grincludedir = $(includedir)/gnuradio

# swig includes
swigincludedir = $(grincludedir)/swig

# Install the gnuradio stuff in the appropriate subdirectory
# This usually ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/gnuradio
grpythondir = $(pythondir)/gnuradio
grpyexecdir = $(pyexecdir)/gnuradio

# Install the non-gnuradio usrp stuff in the appropriate subdirectory
# This usually ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/usrpm
usrppythondir = $(pythondir)/usrpm
usrppyexecdir = $(pyexecdir)/usrpm

# gcell includes
gcellincludedir = $(includedir)/gcell
gcellspuincludedir = $(includedir)/gcell/spu

# Cell spu libs
libspudir = $(libdir)spu

# This used to be set in configure.ac but is now defined here for all 
# Makefiles when this fragment is included.
STD_DEFINES_AND_INCLUDES = $(DEFINES) $(BOOST_CPPFLAGS) \
	$(OMNITHREAD_INCLUDES) $(GNURADIO_INCLUDES) $(GRUEL_INCLUDES)


# when including for compilation from pre-installed libraries and such,
# need to make sure those are put last on the compile command
WITH_INCLUDES = 
WITH_SWIG_INCLUDES = 

# How to link in the top-level omnithreads library from inside the tree
OMNITHREAD_INCLUDES = -I${abs_top_srcdir}/omnithread
OMNITHREAD_LA = ${abs_top_builddir}/omnithread/libgromnithread.la

# Where to find gnuradio include files in the current build tree
# top_srcdir for original stuff, top_builddir for generated files
GNURADIO_INCLUDES = -I${abs_top_srcdir}/gnuradio-core/src/lib/runtime -I${abs_top_srcdir}/gnuradio-core/src/lib/general -I${abs_top_builddir}/gnuradio-core/src/lib/general -I${abs_top_srcdir}/gnuradio-core/src/lib/gengen -I${abs_top_builddir}/gnuradio-core/src/lib/gengen -I${abs_top_srcdir}/gnuradio-core/src/lib/filter -I${abs_top_builddir}/gnuradio-core/src/lib/filter -I${abs_top_srcdir}/gnuradio-core/src/lib/missing -I${abs_top_srcdir}/gnuradio-core/src/lib/reed-solomon -I${abs_top_srcdir}/gnuradio-core/src/lib/viterbi -I${abs_top_srcdir}/gnuradio-core/src/lib/io -I${abs_top_srcdir}/gnuradio-core/src/lib/g72x -I${abs_top_srcdir}/gnuradio-core/src/lib/swig -I${abs_top_builddir}/gnuradio-core/src/lib/swig $(FFTW3F_CFLAGS) $(GSL_CFLAGS)

# How to link in GNU Radio core library from inside the tree
GNURADIO_CORE_LA = ${abs_top_builddir}/gnuradio-core/src/lib/libgnuradio-core.la

# How to link in the USRP library from inside the tree
GRUEL_INCLUDES = -I${abs_top_srcdir}/gruel/src/include -I${abs_top_builddir}/gruel/src/include
GRUEL_LA = ${abs_top_builddir}/gruel/src/lib/libgruel.la

# How to link in the USRP library from inside the tree
USRP_INCLUDES = -I${abs_top_srcdir}/usrp/host/lib/legacy 		-I${abs_top_srcdir}/usrp/firmware/include 		-I${abs_top_builddir}/usrp/host/lib/legacy
USRP_LA = ${abs_top_builddir}/usrp/host/lib/legacy/libusrp.la

# How to link in usrp-inband library from inside the tree
USRP_INBAND_INCLUDES = -I${abs_top_srcdir}/usrp/host/lib/inband
USRP_INBAND_LA = ${abs_top_builddir}/usrp/host/lib/inband/libusrp-inband.la

# How to link the PMT library from inside the tree
PMT_INCLUDES = -I${abs_top_srcdir}/pmt/src/lib
PMT_LA = ${abs_top_builddir}/pmt/src/lib/libpmt.la

# How to link the mblock library from inside the tree
MBLOCK_INCLUDES = -I${abs_top_srcdir}/mblock/src/include
MBLOCK_LA = ${abs_top_builddir}/mblock/src/lib/libmblock.la

# How to link the gcell library from inside the tree (the PPU part)
GCELL_INCLUDES = -I${abs_top_srcdir}/gcell/include
GCELL_LA = ${abs_top_builddir}/gcell/lib/libgcell.la

# How to link the gcell library from inside the tree (the SPU part)
GCELL_SPU_INCLUDES = -I${abs_top_srcdir}/gcell/include
GCELL_SPU_LA = ${abs_top_builddir}/gcell/lib/spu/libgcell_spu.a

# libtool aware wrapper for ppu-embedspu
GCELL_EMBEDSPU_LIBTOOL = /usr/local/src/gnuradio/gcell/lib/runtime/gcell-embedspu-libtool

# Fix for BSD make not defining $(RM).  We define it now in configure.ac
# using AM_PATH_PROG, but now here have to add a -f to be like GNU make
RM = $(RM_PROG) -f
RUN_GUILE = GUILE_LOAD_PATH="/usr/local/src/gnuradio/pmt/src/scheme:/usr/local/src/gnuradio/mblock/src/scheme" /usr/bin/guile -e main -s
COMPILE_MBH = $(RUN_GUILE) $(top_srcdir)/mblock/src/scheme/gnuradio/compile-mbh.scm

# Base directory for example applications
exampledir = $(datadir)/gnuradio/examples
gr_docdir = $(docdir)-$(VERSION)

# Other common defines; use "+=" to add to these
STAMPS = $(DEPDIR)/stamp-sources-generate*
MOSTLYCLEANFILES = $(BUILT_SOURCES) $(STAMPS) *.pyc *.pyo *~ *.tmp \
	*.loT stamp-sources-generate
common_INCLUDES = $(USRP_INCLUDES)
lib_LTLIBRARIES = libusrp.la
libusrp_la_common_LDFLAGS = $(NO_UNDEFINED) -version-info 0:0:0
libusrp_la_common_LIBADD = \
	$(USB_LIBS) 			\
	../../misc/libmisc.la

AM_CPPFLAGS = $(common_INCLUDES) $(BOOST_CPPFLAGS) $(WITH_INCLUDES)

# darwin fusb requires omnithreads
#AM_CPPFLAGS = $(common_INCLUDES) $(OMNITHREAD_INCLUDES) $(BOOST_CPPFLAGS) $(WITH_INCLUDES)
libusrp_la_LIBADD = $(libusrp_la_common_LIBADD)
#libusrp_la_LIBADD = $(libusrp_la_common_LIBADD) $(OMNITHREAD_LA)
libusrp_la_LDFLAGS = $(libusrp_la_common_LDFLAGS)
#libusrp_la_LDFLAGS = $(libusrp_la_common_LDFLAGS) -framework CoreFoundation
EXTRA_DIST = std_paths.h.in usrp_dbid.dat stamp-sources-generate
BUILT_SOURCES = \
	usrp_dbid.h			\
	usrp_dbid.cc			\
	usrp_dbid.py			


# ----------------------------------------------------------------
# FUSB_TECH is set at configure time by way of
#   usrp/config/usrp_fusb_tech.m4.
#   It indicates which fast usb strategy we should be building.
#   We currently implement "generic", "darwin", "win32" and "linux"
generic_CODE = \
	fusb_generic.cc			\
	fusb_sysconfig_generic.cc

darwin_CODE = \
	fusb_darwin.cc			\
	fusb_sysconfig_darwin.cc 	\
	README_OSX			\
	circular_buffer.h		\
	circular_linked_list.h		\
	darwin_libusb.h			\
	mld_threads.h			

win32_CODE = \
	fusb_win32.cc			\
	fusb_sysconfig_win32.cc 	

linux_CODE = \
	fusb_linux.cc			\
	fusb_sysconfig_linux.cc 	

ra_wb_CODE = \
	fusb_ra_wb.cc			\
	fusb_sysconfig_ra_wb.cc


#
# include each <foo>_CODE entry here...
#
EXTRA_libusrp_la_SOURCES = \
	$(generic_CODE)			\
	$(darwin_CODE)			\
	$(win32_CODE)			\
	$(linux_CODE)			\
	$(ra_wb_CODE)


# work around automake deficiency
libusrp_la_common_SOURCES = \
	fusb.cc				\
	md5.c				\
	usrp_basic.cc			\
	usrp_config.cc			\
	usrp_dbid.cc			\
	usrp_local_sighandler.cc	\
	usrp_prims.cc			\
	usrp_standard.cc		\
	db_boards.cc			\
	db_base.cc			\
	db_basic.cc			\
	db_tv_rx.cc			\
	db_flexrf.cc			\
	db_flexrf_mimo.cc		\
	db_dbs_rx.cc			\
	db_xcvr2450.cc			\
	db_dtt754.cc			\
	db_dtt768.cc			\
	db_util.cc

#libusrp_la_SOURCES = $(libusrp_la_common_SOURCES) $(darwin_CODE)

#	db_wbx.cc
#libusrp_la_SOURCES = $(libusrp_la_common_SOURCES) $(generic_CODE)
libusrp_la_SOURCES = $(libusrp_la_common_SOURCES) $(linux_CODE)
#libusrp_la_SOURCES = $(libusrp_la_common_SOURCES) $(ra_wb_CODE)
#libusrp_la_SOURCES = $(libusrp_la_common_SOURCES) $(win32_CODE)
include_HEADERS = \
	db_base.h			\
	usrp_basic.h			\
	usrp_bytesex.h			\
	usrp_config.h			\
	usrp_dbid.h			\
	usrp_prims.h			\
	usrp_slots.h			\
	usrp_standard.h			\
	usrp_subdev_spec.h		\
	usrp_tune_result.h		

noinst_HEADERS = \
	ad9862.h			\
	db_base_impl.h			\
	db_basic.h			\
	db_boards.h			\
	db_dbs_rx.h			\
	db_dtt754.h			\
	db_dtt768.h			\
	db_flexrf.h			\
	db_flexrf_mimo.h		\
	db_tv_rx.h			\
	db_util.h			\
	db_wbx.h			\
	db_xcvr2450.h			\
	fusb.h				\
	fusb_darwin.h			\
	fusb_generic.h			\
	fusb_linux.h			\
	fusb_ra_wb.h			\
	fusb_win32.h			\
	md5.h				\
	rate_to_regval.h		\
	usrp_local_sighandler.h		

usrppython_PYTHON = \
	usrp_dbid.py			

noinst_PYTHON = \
	gen_usrp_dbid.py		\
	check_data.py			\
	dump_data.py

swiginclude_HEADERS = db_base.i

# common way for generating sources from templates when using
# BUILT_SOURCES, using parallel build protection.
gen_sources = $(BUILT_SOURCES)
gen_sources_deps = gen_usrp_dbid.py usrp_dbid.dat
par_gen_command = PYTHONPATH=$(top_srcdir)/usrp/src srcdir=$(srcdir) $(PYTHON) $(srcdir)/gen_usrp_dbid.py $(srcdir)/usrp_dbid.dat
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(top_srcdir)/Makefile.par.gen $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  usrp/host/lib/legacy/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  usrp/host/lib/legacy/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
std_paths.h: $(top_builddir)/config.status $(srcdir)/std_paths.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libusrp.la: $(libusrp_la_OBJECTS) $(libusrp_la_DEPENDENCIES) 
	$(libusrp_la_LINK) -rpath $(libdir) $(libusrp_la_OBJECTS) $(libusrp_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/db_base.Plo
include ./$(DEPDIR)/db_basic.Plo
include ./$(DEPDIR)/db_boards.Plo
include ./$(DEPDIR)/db_dbs_rx.Plo
include ./$(DEPDIR)/db_dtt754.Plo
include ./$(DEPDIR)/db_dtt768.Plo
include ./$(DEPDIR)/db_flexrf.Plo
include ./$(DEPDIR)/db_flexrf_mimo.Plo
include ./$(DEPDIR)/db_tv_rx.Plo
include ./$(DEPDIR)/db_util.Plo
include ./$(DEPDIR)/db_xcvr2450.Plo
include ./$(DEPDIR)/fusb.Plo
include ./$(DEPDIR)/fusb_darwin.Plo
include ./$(DEPDIR)/fusb_generic.Plo
include ./$(DEPDIR)/fusb_linux.Plo
include ./$(DEPDIR)/fusb_ra_wb.Plo
include ./$(DEPDIR)/fusb_sysconfig_darwin.Plo
include ./$(DEPDIR)/fusb_sysconfig_generic.Plo
include ./$(DEPDIR)/fusb_sysconfig_linux.Plo
include ./$(DEPDIR)/fusb_sysconfig_ra_wb.Plo
include ./$(DEPDIR)/fusb_sysconfig_win32.Plo
include ./$(DEPDIR)/fusb_win32.Plo
include ./$(DEPDIR)/md5.Plo
include ./$(DEPDIR)/usrp_basic.Plo
include ./$(DEPDIR)/usrp_config.Plo
include ./$(DEPDIR)/usrp_dbid.Plo
include ./$(DEPDIR)/usrp_local_sighandler.Plo
include ./$(DEPDIR)/usrp_prims.Plo
include ./$(DEPDIR)/usrp_standard.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-usrppythonPYTHON: $(usrppython_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(usrppythondir)" || $(MKDIR_P) "$(DESTDIR)$(usrppythondir)"
	@list='$(usrppython_PYTHON)'; dlist=''; for p in $$list; do\
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    f=$(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    echo " $(usrppythonPYTHON_INSTALL) '$$b$$p' '$(DESTDIR)$(usrppythondir)/$$f'"; \
	    $(usrppythonPYTHON_INSTALL) "$$b$$p" "$(DESTDIR)$(usrppythondir)/$$f"; \
	  else :; fi; \
	done; \
	if test -n "$$dlist"; then \
	  if test -z "$(DESTDIR)"; then \
	    PYTHON=$(PYTHON) $(py_compile) --basedir "$(usrppythondir)" $$dlist; \
	  else \
	    PYTHON=$(PYTHON) $(py_compile) --destdir "$(DESTDIR)" --basedir "$(usrppythondir)" $$dlist; \
	  fi; \
	else :; fi

uninstall-usrppythonPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(usrppython_PYTHON)'; dlist=''; for p in $$list; do\
	  f=$(am__strip_dir) \
	  rm -f "$(DESTDIR)$(usrppythondir)/$$f"; \
	  rm -f "$(DESTDIR)$(usrppythondir)/$${f}c"; \
	  rm -f "$(DESTDIR)$(usrppythondir)/$${f}o"; \
	done
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done
install-swigincludeHEADERS: $(swiginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(swigincludedir)" || $(MKDIR_P) "$(DESTDIR)$(swigincludedir)"
	@list='$(swiginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(swigincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(swigincludedir)/$$f'"; \
	  $(swigincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(swigincludedir)/$$f"; \
	done

uninstall-swigincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(swiginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(swigincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(swigincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(usrppythondir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(swigincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS install-swigincludeHEADERS \
	install-usrppythonPYTHON

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-swigincludeHEADERS uninstall-usrppythonPYTHON

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags dist-hook distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-swigincludeHEADERS install-usrppythonPYTHON \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-swigincludeHEADERS \
	uninstall-usrppythonPYTHON


# Base directory for documentation (docdir undefined in autoconf < 1.60)
docdir ?= $(datadir)/doc/$(PACKAGE)

# Don't distribute the files defined in the variable 'no_dist_files'
dist-hook:
	@for file in $(no_dist_files); do \
		echo $(RM) $(distdir)/$$file; \
		$(RM) $(distdir)/$$file; \
	done;

STAMPS ?=
EXTRA_DIST ?=
MOSTLYCLEANFILES ?=

stamp-sources-generate: $(gen_sources_deps)
	@rm -f $(DEPDIR)/stamp-sources-generate-tmp
	@touch $(DEPDIR)/stamp-sources-generate-tmp
	$(par_gen_command)
	@mv -f $(DEPDIR)/stamp-sources-generate-tmp $@

$(gen_sources): stamp-sources-generate
	@if test -f $@; then :; else \
		trap 'rm -rf $(DEPDIR)/stamp-sources-generate-*' 1 2 13 15; \
		if mkdir $(DEPDIR)/stamp-sources-generate-lock 2>/dev/null; then \
			rm -f stamp-sources-generate; \
			$(MAKE) $(AM_MAKEFLAGS) stamp-sources-generate; \
			rmdir $(DEPDIR)/stamp-sources-generate-lock; \
		else \
			while test -d $(DEPDIR)/stamp-sources-generate-lock; do sleep 1; done; \
			test -f stamp-sources-generate; exit $$?; \
		fi; \
	fi;
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
